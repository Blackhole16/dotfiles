#!/bin/bash

# partition variables
BOOTPARTITION=/dev/device1
SWAPPARTITION=/dev/device2
SYSTEMPARTITION=/dev/device3
SWAP=/dev/mapper/swap
SYSTEM=/dev/mapper/system

loadkeys de-latin1
setfont lat9w-16

# setup partitions
fdisk /dev/device
    # GPT, needed for EFI
    g
    # boot
    n
        1
        default
        +100M
    t
        1
    # SWAP
    n
        2
        default
        +32G
    t
        2
        19
    # Linux System
    n
        3
        default
        +256G
    w

# crypto system
# If no keyfile is wanted, leave out -d keyfile.
cryptsetup -vd keyfile_system luksFormat $SYSTEMPARTITION
cryptsetup open -d keyfile_system $SYSTEMPARTITION system
# crypto swap
# If swap should not be encrypted, leave out this step.
# If no keyfile is wanted, leave out -d keyfile. UNTESTED
cryptsetup -vd keyfile_swap luksFormat $SWAPPARTITION
cryptsetup open -d keyfile_swap $SWAPPARTITION swap


# format
mkfs.ext4 $SYSTEM
mkfs.fat -F32 $BOOTPARTITION
# swap
# If swap was set up without cryptsetup, use $SWAPPARTITION instead of $SWAP.
mkswap $SWAP
swapon $SWAP

# mount everything
mount $SYSTEM /mnt
mkdir /mnt/boot
mount $BOOTPARTITION /mnt/boot


# pacstrap
# For a setup with wayland and swey use this instead UNTESTED
# pacstrap -i /mnt base base-devel git net-tools networkmanager wayland sway gnome-terminal cmake
# For a setup with gnome and wayland (wayland is default for gnome).
# Using gnome you need to have `exec gnome-session` in you .xinitrc.
# Additionally if you want to use gdm, run `systemctl enable gdm.service` in the new system
# pacstrap -i /mnt base base-devel zsh git net-tools networkmanager network-manager-applet gvim cmake gnome gnome-extra
pacstrap -i /mnt base base-devel zsh git net-tools networkmanager xorg-xserver xorg-xinit xorg-utils xorg-server-utils rxvt-unicode i3 dmenu autocutsel gvim cmake
genfstab -U /mnt > /mnt/etc/fstab
cat /mnt/etc/fstab

arch-chroot /mnt /bin/zsh

# locale
nano /etc/locale.gen # uncomment en_US.UTF-8 UTF-8 or the language of your choice
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf # use the uncommented language here
echo -e "KEYMAP=de-latin1\nFONT=lat9w-16" > /etc/vconsole.conf
ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime
hwclock --systohc --utc

# hostname
echo myhostname > /etc/hostname
nano /etc/hosts # add 'myhostname' to end of each line

# setup boot
bootctl install
bootctl update

# create user
useradd NAME -m -g users -G wheel -s /bin/zsh 
nano /etc/sudoers # uncomment %wheel
# Using the group sudo may work as well (@main--), but I only had success with wheel.

# dotfiles 'n stuff
  # change user to created one
  # setup dotfiles
  # setup paranoid_link if needed
  # edit files for paranoid stuff

# generate bootimage and entries
mkinitcpio -p linux
cat <<_EOF_ > /boot/loader/entries/arch.conf
title       Arch Linux
linux       /vmlinuz-linux
initrd      /initramfs-linux.img
options     cryptdevice=$SYSTEMPARTITION:system root=$SYSTEM
_EOF_

# If multiple entries exist, timeout should be non-zero
cat <<_EOF_ > /boot/loader/loader.conf
default arch
timeout 0
_EOF_

# important packets
pacman -S python3
pacman -S python2
pacman -S arandr
pacman -S ttf-dejavu
pacman -S ttf-symbola
pacman -S wget
pacman -S openssh
pacman -S openvpn

# pacaur instead of pacaur, because it's secureâ„¢
# https://gist.github.com/Tadly/0e65d30f279a34c33e9b
mkdir -p /tmp/pacaur_install
cd /tmp/pacaur_install
sudo pacman -S expac yajl git --noconfirm --needed
curl -o PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=cower"
makepkg PKGBUILD --skippgpcheck --install --needed
curl -o PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=pacaur"
makepkg PKGBUILD --install --needed
cd ~
rm -r /tmp/pacaur_install

# setup neo-layout
pacaur -S kbd-neo
localectl set-keymap --no-convert de neo
localectl set-x11-keymap --no-convert de neo

# notification daemon
pacman -S dunst

# browser
pacaur -S vivaldi
pacman -S opera
pacman -S firefox
pacman -S gst-libav

# useful others
pacman -S evince
pacman -S feh
pacman -S imagemagick
pacman -S htop iotop
pacman -S unzip
pacman -S nmap
pacman -S mlocate
pacman -S gedit
pacman -S pm-utils
pacman -S tree
pacman -S dosfstools
pacman -S ntfs-3g
pacman -S mariadb
# init mysql
sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
mysql_secure_installation
pacman -S dnsutils

# others
pacman -S ffmpeg
pacman -S vlc
pacaur -S livestreamer
pacman -S mumble
pacman -S pulseaudio
pacman -S pavucontrol
pacaur -S pulseaudio-ctl
pacman -S thunderbird
pacaur -S skype
pacman -S pidgin pidgin-otr


# steam
# enable multilib in /etc/pacman.conf
pacman -Syu
pacaur -S steam

# other fonts used for games/wine/vim
pacaur -S ttf-tahoma
pacaur -S ttf-ms-fonts
pacaur -S ttf-dejavu-sans-mono-powerline-git

# java
pacman -S jdk8-openjdk
pacman -S openjdk8-src
pacman -S openjdk8-doc
pacaur -S intellij-idea-ultimate-edition

# rust
pacaur -S rust-nightly-bin
pacaur -S rust-racer-git
pacaur -S rust-src

# maybe
pacman -S gparted
